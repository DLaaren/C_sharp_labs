networks:
  app:
    driver: bridge
    name: app

services:
    
  database:
    image: "postgres:16-alpine"
    container_name: postgresql
    
    environment:
      - POSTGRES_DB=hackathon
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
      
    ports:
      - "5432:5432"
      
    networks:
      - app
      
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U app -d hackathon" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
      
        
  rabbitmq:
    image: "rabbitmq:4-management-alpine"
    container_name: rabbitmq
    
    ports:
      - "5672:5672"
      - "15672:15672"
      
    networks:
      - app
      
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

  hr_director:
    image: "hackathon/hr_director:latest"
    container_name: hr_director

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.HRDirectorService/Dockerfile

    environment:
      - EMPLOYEES_NUM=10
      - HACKATHONS_NUM=10
        
    networks:
      - app
      
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8083/api/hr_director/health || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        
      teamlead-1:
        condition: service_started
      teamlead-2:
        condition: service_started
      teamlead-3:
        condition: service_started
      teamlead-4:
        condition: service_started
      teamlead-5:
        condition: service_started
      junior-1:
        condition: service_started
      junior-2:
        condition: service_started
      junior-3:
        condition: service_started
      junior-4:
        condition: service_started
      junior-5:
        condition: service_started
      
      hr_manager:
        condition: service_started
        
  hr_manager:
    image: "hackathon/hr_manager:latest"
    container_name: hr_manager
    
    build:
      context: .
      dockerfile: EveryoneToTheHackathon.HRManagerService/Dockerfile
    
    environment:
      - EMPLOYEES_NUM=10
      
    networks:
      - app 
      
#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8082/api/hr_manager/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s
      
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
       
        
  teamlead-1:
    image: "hackathon/employee:latest"
    container_name: teamlead-1
    
    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile
      
    environment:
      - ID=1
      - TITLE=TeamLead
      - NAME=Филиппова Ульяна
      
    networks:
      - app
        
#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s
    
    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
        

  teamlead-2:
    image: "hackathon/employee:latest"
    container_name: teamlead-2

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=2
      - TITLE=TeamLead
      - NAME=Николаев Григорий

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  teamlead-3:
    image: "hackathon/employee:latest"
    container_name: teamlead-3

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=3
      - TITLE=TeamLead
      - NAME=Андреева Вероника

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  teamlead-4:
    image: "hackathon/employee:latest"
    container_name: teamlead-4

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=4
      - TITLE=TeamLead
      - NAME=Коротков Михаил

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  teamlead-5:
    image: "hackathon/employee:latest"
    container_name: teamlead-5

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=5
      - TITLE=TeamLead
      - NAME=Кузнецов Александр

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  junior-1:
    image: "hackathon/employee:latest"
    container_name: junior-1

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=1
      - TITLE=Junior
      - NAME=Юдин Адам

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  junior-2:
    image: "hackathon/employee:latest"
    container_name: junior-2

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=2
      - TITLE=Junior
      - NAME=Яшина Яна

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  junior-3:
    image: "hackathon/employee:latest"
    container_name: junior-3

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=3
      - TITLE=Junior
      - NAME=Никитина Вероника

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  junior-4:
    image: "hackathon/employee:latest"
    container_name: junior-4

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=4
      - TITLE=Junior
      - NAME=Рябинин Александр

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


  junior-5:
    image: "hackathon/employee:latest"
    container_name: junior-5

    build:
      context: .
      dockerfile: EveryoneToTheHackathon.EmployeeService/Dockerfile

    environment:
      - ID=5
      - TITLE=Junior
      - NAME=Ильин Тимофей

    networks:
      - app

#    healthcheck:
#      test: [ "CMD-SHELL", "curl --fail http://localhost:8081/api/employee/health || exit 1" ]
#      interval: 5s
#      timeout: 10s
#      retries: 5
#      start_period: 5s

    depends_on:
      database:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
