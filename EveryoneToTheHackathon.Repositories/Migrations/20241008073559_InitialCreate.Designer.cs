// <auto-generated />
using EveryoneToTheHackathon.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EveryoneToTheHackathon.Repositories.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241008073559_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EmployeeHackathon", b =>
                {
                    b.Property<int>("HackathonsId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeesTitle")
                        .HasColumnType("text");

                    b.HasKey("HackathonsId", "EmployeesId", "EmployeesTitle");

                    b.HasIndex("EmployeesId", "EmployeesTitle");

                    b.ToTable("EmployeeHackathon");
                });

            modelBuilder.Entity("EmployeeTeam", b =>
                {
                    b.Property<int>("TeamsId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeesId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeesTitle")
                        .HasColumnType("text");

                    b.HasKey("TeamsId", "EmployeesId", "EmployeesTitle");

                    b.HasIndex("EmployeesId", "EmployeesTitle");

                    b.ToTable("EmployeeTeam");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id", "Title");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Hackathon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("MeanSatisfactionIndex")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Hackathons");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HackathonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HackathonId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int[]>("DesiredEmployees")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HackathonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HackathonId");

                    b.HasIndex("EmployeeId", "EmployeeTitle");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("EmployeeHackathon", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Entities.Hackathon", null)
                        .WithMany()
                        .HasForeignKey("HackathonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId", "EmployeesTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeTeam", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Entities.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesId", "EmployeesTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Team", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Entities.Hackathon", "Hackathon")
                        .WithMany("Teams")
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hackathon");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Wishlist", b =>
                {
                    b.HasOne("EveryoneToTheHackathon.Entities.Hackathon", "Hackathon")
                        .WithMany("Wishlists")
                        .HasForeignKey("HackathonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EveryoneToTheHackathon.Entities.Employee", "Employee")
                        .WithMany("Wishlists")
                        .HasForeignKey("EmployeeId", "EmployeeTitle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Hackathon");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Employee", b =>
                {
                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("EveryoneToTheHackathon.Entities.Hackathon", b =>
                {
                    b.Navigation("Teams");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
